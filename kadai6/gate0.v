/* Generated by Yosys 0.9 (git sha1 1979e0b1, i686-w64-mingw32.static-g++ 5.5.0 -Os) */

(* top =  1  *)
(* src = "vm.v:1" *)
module vm(a, b, clk, rst, change, out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  (* src = "vm.v:1" *)
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  (* src = "vm.v:1" *)
  wire _030_;
  (* src = "vm.v:1" *)
  wire _031_;
  (* src = "vm.v:1" *)
  wire _032_;
  (* src = "vm.v:1" *)
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  (* src = "vm.v:2" *)
  wire _053_;
  (* src = "vm.v:2" *)
  wire _054_;
  (* src = "vm.v:2" *)
  wire _055_;
  (* src = "vm.v:2" *)
  wire _056_;
  (* src = "vm.v:2" *)
  wire _057_;
  (* src = "vm.v:2" *)
  wire _058_;
  (* src = "vm.v:1" *)
  wire _059_;
  (* src = "vm.v:2" *)
  wire _060_;
  (* src = "vm.v:2" *)
  wire _061_;
  (* src = "vm.v:2" *)
  wire _062_;
  (* src = "vm.v:2" *)
  wire _063_;
  (* src = "vm.v:2" *)
  wire _064_;
  (* src = "vm.v:2" *)
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  (* src = "vm.v:1" *)
  input a;
  (* src = "vm.v:1" *)
  input b;
  (* src = "vm.v:1" *)
  output [2:0] change;
  (* src = "vm.v:1" *)
  input clk;
  (* src = "vm.v:2" *)
  wire [5:0] nstate;
  (* src = "vm.v:1" *)
  output out;
  (* src = "vm.v:1" *)
  input rst;
  (* src = "vm.v:2" *)
  wire [5:0] state;
  INVX1 _072_ (
    .A(_059_),
    .Y(_029_)
  );
  INVX1 _073_ (
    .A(_030_),
    .Y(_034_)
  );
  INVX1 _074_ (
    .A(_065_),
    .Y(_035_)
  );
  INVX1 _075_ (
    .A(_063_),
    .Y(_036_)
  );
  NOR2X1 _076_ (
    .A(_034_),
    .B(_023_),
    .Y(_037_)
  );
  AND2X1 _077_ (
    .A(_034_),
    .B(_023_),
    .Y(_038_)
  );
  XNOR2X1 _078_ (
    .A(_030_),
    .B(_023_),
    .Y(_039_)
  );
  INVX1 _079_ (
    .A(_039_),
    .Y(_040_)
  );
  NOR2X1 _080_ (
    .A(_062_),
    .B(_063_),
    .Y(_041_)
  );
  NOR2X1 _081_ (
    .A(_064_),
    .B(_065_),
    .Y(_042_)
  );
  AND2X1 _082_ (
    .A(_041_),
    .B(_042_),
    .Y(_043_)
  );
  NAND2X1 _083_ (
    .A(_041_),
    .B(_042_),
    .Y(_044_)
  );
  OR2X1 _084_ (
    .A(_061_),
    .B(_044_),
    .Y(_045_)
  );
  OAI21X1 _085_ (
    .A(_040_),
    .B(_045_),
    .C(_035_),
    .Y(_053_)
  );
  NOR2X1 _086_ (
    .A(_061_),
    .B(_038_),
    .Y(_046_)
  );
  AOI21X1 _087_ (
    .A(_040_),
    .B(_045_),
    .C(_046_),
    .Y(_054_)
  );
  AOI22X1 _088_ (
    .A(_061_),
    .B(_038_),
    .C(_039_),
    .D(_062_),
    .Y(_047_)
  );
  INVX1 _089_ (
    .A(_047_),
    .Y(_055_)
  );
  AOI22X1 _090_ (
    .A(_062_),
    .B(_038_),
    .C(_039_),
    .D(_063_),
    .Y(_048_)
  );
  INVX1 _091_ (
    .A(_048_),
    .Y(_056_)
  );
  AOI22X1 _092_ (
    .A(_063_),
    .B(_038_),
    .C(_039_),
    .D(_064_),
    .Y(_049_)
  );
  INVX1 _093_ (
    .A(_049_),
    .Y(_057_)
  );
  NOR3X1 _094_ (
    .A(_034_),
    .B(_023_),
    .C(_041_),
    .Y(_032_)
  );
  OAI21X1 _095_ (
    .A(_061_),
    .B(_043_),
    .C(_037_),
    .Y(_050_)
  );
  NOR2X1 _096_ (
    .A(_064_),
    .B(_032_),
    .Y(_051_)
  );
  OAI21X1 _097_ (
    .A(_039_),
    .B(_051_),
    .C(_050_),
    .Y(_058_)
  );
  OAI21X1 _098_ (
    .A(_060_),
    .B(_044_),
    .C(_036_),
    .Y(_052_)
  );
  AND2X1 _099_ (
    .A(_037_),
    .B(_052_),
    .Y(_031_)
  );
  AND2X1 _100_ (
    .A(_064_),
    .B(_037_),
    .Y(_033_)
  );
  INVX1 _101_ (
    .A(_059_),
    .Y(_024_)
  );
  INVX1 _102_ (
    .A(_059_),
    .Y(_025_)
  );
  INVX1 _103_ (
    .A(_059_),
    .Y(_026_)
  );
  INVX1 _104_ (
    .A(_059_),
    .Y(_027_)
  );
  INVX1 _105_ (
    .A(_059_),
    .Y(_028_)
  );
  (* src = "vm.v:4" *)
  DFFSR _106_ (
    .CLK(clk),
    .D(nstate[0]),
    .Q(state[0]),
    .R(_066_),
    .S(1'h1)
  );
  (* src = "vm.v:4" *)
  DFFSR _107_ (
    .CLK(clk),
    .D(nstate[1]),
    .Q(state[1]),
    .R(_067_),
    .S(1'h1)
  );
  (* src = "vm.v:4" *)
  DFFSR _108_ (
    .CLK(clk),
    .D(nstate[2]),
    .Q(state[2]),
    .R(_068_),
    .S(1'h1)
  );
  (* src = "vm.v:4" *)
  DFFSR _109_ (
    .CLK(clk),
    .D(nstate[3]),
    .Q(state[3]),
    .R(_069_),
    .S(1'h1)
  );
  (* src = "vm.v:4" *)
  DFFSR _110_ (
    .CLK(clk),
    .D(nstate[4]),
    .Q(state[4]),
    .R(_070_),
    .S(1'h1)
  );
  (* src = "vm.v:4" *)
  DFFSR _111_ (
    .CLK(clk),
    .D(nstate[5]),
    .Q(state[5]),
    .R(1'h1),
    .S(_071_)
  );
  assign out = state[5];
  assign _059_ = rst;
  assign _071_ = _029_;
  assign _030_ = b;
  assign _023_ = a;
  assign _061_ = state[1];
  assign _064_ = state[4];
  assign _065_ = state[5];
  assign _062_ = state[2];
  assign _063_ = state[3];
  assign nstate[0] = _053_;
  assign nstate[1] = _054_;
  assign nstate[2] = _055_;
  assign nstate[3] = _056_;
  assign nstate[4] = _057_;
  assign change[1] = _032_;
  assign nstate[5] = _058_;
  assign _060_ = state[0];
  assign change[0] = _031_;
  assign change[2] = _033_;
  assign _066_ = _024_;
  assign _067_ = _025_;
  assign _068_ = _026_;
  assign _069_ = _027_;
  assign _070_ = _028_;
endmodule
