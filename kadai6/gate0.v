/* Generated by Yosys 0.9 (git sha1 1979e0b1, i686-w64-mingw32.static-g++ 5.5.0 -Os) */

(* top =  1  *)
(* src = "vm.v:1" *)
module vm(a, b, clk, rst, change);
  (* src = "vm.v:15" *)
  wire [2:0] _00_;
  wire _01_;
  wire _02_;
  (* src = "vm.v:15" *)
  wire _03_;
  (* src = "vm.v:1" *)
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "vm.v:1" *)
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "vm.v:1" *)
  wire _13_;
  (* src = "vm.v:2" *)
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  (* src = "vm.v:1" *)
  input a;
  (* src = "vm.v:1" *)
  input b;
  (* src = "vm.v:1" *)
  output [2:0] change;
  (* src = "vm.v:1" *)
  input clk;
  (* src = "vm.v:4" *)
  (* unused_bits = "0" *)
  wire [1:0] cnt;
  (* src = "vm.v:3" *)
  wire [2:0] nchange;
  (* src = "vm.v:1" *)
  input rst;
  (* src = "vm.v:2" *)
  (* unused_bits = "0" *)
  wire [5:0] state;
  INVX1 _19_ (
    .A(_13_),
    .Y(_09_)
  );
  INVX1 _20_ (
    .A(_10_),
    .Y(_11_)
  );
  INVX1 _21_ (
    .A(_14_),
    .Y(_12_)
  );
  OAI21X1 _22_ (
    .A(_11_),
    .B(_04_),
    .C(_14_),
    .Y(_05_)
  );
  NOR2X1 _23_ (
    .A(_04_),
    .B(_12_),
    .Y(_03_)
  );
  INVX1 _24_ (
    .A(_13_),
    .Y(_06_)
  );
  INVX1 _25_ (
    .A(_13_),
    .Y(_08_)
  );
  (* src = "vm.v:6" *)
  DFFSR _26_ (
    .CLK(clk),
    .D(1'h0),
    .Q(state[2]),
    .R(_15_),
    .S(_16_)
  );
  (* src = "vm.v:6" *)
  DFFSR _27_ (
    .CLK(clk),
    .D(nchange[1]),
    .Q(change[1]),
    .R(_17_),
    .S(1'h1)
  );
  (* src = "vm.v:6" *)
  DFFSR _28_ (
    .CLK(clk),
    .D(nchange[2]),
    .Q(change[2]),
    .R(_18_),
    .S(1'h1)
  );
  (* src = "vm.v:15" *)
  \$_DLATCH_P_  _29_ (
    .D(state[2]),
    .E(_01_),
    .Q(nchange[1])
  );
  (* src = "vm.v:15" *)
  \$_DLATCH_P_  _30_ (
    .D(_00_[2]),
    .E(_01_),
    .Q(nchange[2])
  );
  assign _00_[1:0] = { state[2], state[2] };
  assign change[0] = change[1];
  assign cnt[1] = a;
  assign nchange[0] = nchange[1];
  assign { state[5:3], state[1] } = { state[2], state[2], state[2], state[2] };
  assign _07_ = 1'h1;
  assign _13_ = rst;
  assign _18_ = _09_;
  assign _15_ = _06_;
  assign _10_ = b;
  assign _04_ = a;
  assign _14_ = state[2];
  assign _01_ = _05_;
  assign _00_[2] = _03_;
  assign _16_ = _07_;
  assign _17_ = _08_;
endmodule
