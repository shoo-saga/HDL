$date
	Thu May 14 18:03:13 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 4 ! s [3:0] $end
$var wire 1 " co $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module ra $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 4 ' s [3:0] $end
$var wire 4 ( co [3:0] $end
$var wire 4 ) c [3:0] $end
$scope module f0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , ci $end
$var wire 1 - co $end
$var wire 1 . s $end
$upscope $end
$scope module f1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 ci $end
$var wire 1 2 co $end
$var wire 1 3 s $end
$upscope $end
$scope module f2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 ci $end
$var wire 1 7 co $end
$var wire 1 8 s $end
$upscope $end
$scope module f3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; ci $end
$var wire 1 < co $end
$var wire 1 = s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1=
0<
1;
0:
09
08
17
06
15
14
13
02
01
10
0/
1.
0-
0,
0+
1*
b1000 )
b0 (
b1011 '
b110 &
b101 %
b110 $
b101 #
0"
b1011 !
$end
#10
16
12
03
1=
11
1;
1-
1"
b1110 )
17
0.
b1 (
1<
b1000 !
b1000 '
08
1+
00
1:
1/
04
19
b1101 $
b1101 &
b1011 #
b1011 %
#20
06
02
13
01
b1000 )
0-
1.
08
b11 !
b11 '
0=
0+
10
0/
14
09
b1110 $
b1110 &
b101 #
b101 %
