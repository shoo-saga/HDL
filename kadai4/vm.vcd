$date
	Mon Jun 01 03:29:33 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! out $end
$var wire 3 " change [2:0] $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$scope module vend $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var reg 3 ' change [2:0] $end
$var reg 3 ( nchange [2:0] $end
$var reg 6 ) nstate [5:0] $end
$var reg 1 ! out $end
$var reg 6 * state [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 *
b1 )
b0 (
b0 '
1&
0%
0$
0#
b0 "
0!
$end
#1
1%
#2
b10 )
0%
1#
0&
#3
b100 )
b10 *
1%
#4
0%
#5
b1000 )
b100 *
1%
#6
b10 (
b100000 )
0%
1$
0#
#7
1!
b10 "
b10 '
b1 )
b100000 *
1%
#8
0%
#9
b100000 )
b0 (
0!
b0 "
b0 '
b1 *
1%
#10
b1 )
0%
0$
1&
#11
1%
#12
b100000 )
0%
1$
0&
#13
1!
b1 )
b100000 *
1%
#14
0%
#15
b100000 )
0!
b1 *
1%
#16
b1 )
0%
0$
1&
#17
1%
#18
b10 )
0%
1#
0&
#19
b100 )
b10 *
1%
#20
0%
#21
b1000 )
b100 *
1%
#22
0%
#23
b10000 )
b1000 *
1%
#24
0%
#25
b100000 )
b10000 *
1%
#26
b100 (
0%
1$
0#
#27
1!
b100 "
b100 '
b1 )
b100000 *
1%
#28
0%
#29
b100000 )
b0 (
0!
b0 "
b0 '
b1 *
1%
#30
0%
